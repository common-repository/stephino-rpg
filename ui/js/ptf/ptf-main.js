/**
 * Platformer
 * 
 * @title      Platformer
 * @desc       Initialize the platformer
 * @copyright  (c) 2021, Stephino
 * @author     Mark Jivko <stephino.team@gmail.com>
 * @package    stephino-rpg
 * @license    GPL v3+, https://gnu.org/licenses/gpl-3.0.txt
 */
/* global stephino_rpg_data, Phaser */
// Stephino RPG Platformer
var stephino_rpg_ptf = null; var stephino_rpg_tools = { media: { getUrl: function(imagePath) { var mediaUrl = new URL(stephino_rpg_data.ajax_url); mediaUrl.searchParams.set('method', 'media'); mediaUrl.searchParams.set('mediaPath', imagePath); return mediaUrl.toString(); } }}; jQuery(document).ready(function () { window.PhaserGlobal = {hideBanner: true}; var gameBody = jQuery('body'); var gamePluginVer = gameBody.attr('data-plugin-version'); var gameId = parseInt(gameBody.attr('data-id'), 10); var gamePtfVer = `${gamePluginVer}.${gameId}.${parseInt(gameBody.attr('data-version'), 10)}`; do { if (0 === gameId) { break; } jQuery('#stephino-rpg-ptf').html(''); var mapUrl = new URL(stephino_rpg_data.ajax_url); mapUrl.searchParams.set('method', 'js'); mapUrl.searchParams.set('view', 'ptf'); mapUrl.searchParams.set('viewData', gameId); mapUrl.searchParams.set('ver', gamePtfVer); var tilesUrl = new URL(stephino_rpg_tools.media.getUrl('img/ui/ptfs/ptf-tiles.png')); tilesUrl.searchParams.set('ver', gamePluginVer); var playerUrl = new URL(stephino_rpg_tools.media.getUrl('img/ui/ptfs/ptf-player.png')); playerUrl.searchParams.set('ver', gamePluginVer); var buttonUrl = new URL(stephino_rpg_tools.media.getUrl('img/ui/ptfs/ptf-buttons.png')); buttonUrl.searchParams.set('ver', gamePluginVer); var labels = { tilemap: 'stephino.rpg.map.' + gamePtfVer, tiles: 'stephino.rpg.tiles.' + gamePluginVer, player: 'stephino.rpg.player.' + gamePluginVer, button: 'stephino.rpg.button.' + gamePluginVer }; stephino_rpg_ptf = { listener: function(e) { if ("object" === typeof e.data && null !== e.data && "string" === typeof e.data.msgType && "undefined" !== typeof e.data.msgData) { switch (e.data.msgType) { case 'end': var popupObject = jQuery('[data-role="ptf-popup"]').addClass( stephino_rpg_ptf.fx.end.status ? 'success' : 'failure' ); if (e.data.msgData > 0) { popupObject.find('.ptf-reward') .removeClass('d-none') .find('.value').html(e.data.msgData); } break; case 'start': if (gameId === e.data.msgData) { window.location.reload(); } else { var currentUrl = new URL(window.location.href); currentUrl.searchParams.set('viewData', e.data.msgData); window.location.href = currentUrl.toString(); } break; } } }, map: null, world: null, cursors: null, player: { object: null, side: 'right' }, tools: { _isMobile: null, isMobile: function() { if (null === this._isMobile) { this._isMobile = false; (function(a) { if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) { stephino_rpg_ptf.tools._isMobile = true; } }) (navigator.userAgent||navigator.vendor||window.opera); } return this._isMobile; } }, fx: { score: { current: 0, total: 0, object: jQuery('[data-role="score"]'), init: function() { if (!this.object.hasClass('active')) { stephino_rpg_ptf.map.layer.data.forEach(function(tileRow) { tileRow.forEach(function(tile) { if (18 === tile.index) { stephino_rpg_ptf.fx.score.total++; } }); }); this.object.addClass('active'); this.display(); if (0 === stephino_rpg_ptf.fx.score.total) { this.update(); } this.object.click(stephino_rpg_ptf.fx.buttons.init); } }, update: function() { if (null !== stephino_rpg_ptf.fx.end.status) { return; } stephino_rpg_ptf.fx.score.current = stephino_rpg_ptf.fx.score.total; stephino_rpg_ptf.map.layer.data.forEach(function(tileRow) { tileRow.forEach(function(tile) { if (18 === tile.index) { stephino_rpg_ptf.fx.score.current--; } }); }); if (stephino_rpg_ptf.fx.score.current >= stephino_rpg_ptf.fx.score.total) { stephino_rpg_ptf.map.layer.data.forEach(function(tileRow) { tileRow.forEach(function(tile) { if (20 === tile.index) { tile.index = 21; } }); }); } stephino_rpg_ptf.fx.sound('cellTap'); this.display(); }, display: function() { this.object.html(`<span>${this.current}</span> / <span>${this.total}</span>`); } }, sound: function(soundId) { parent.postMessage({msgType: 'sound', msgData: soundId}, '*'); }, end: { status: null, game: function(status) { do { if (null !== this.status) { break; } this.status = !!status; stephino_rpg_ptf.player.object.alpha = 0; parent.postMessage({msgType: 'end', msgData: this.status}, '*'); } while(false); } }, collide: function (sprite, tile) { if (null === stephino_rpg_ptf.fx.end.status) { switch (tile.index) { case 18: tile.index = 1; stephino_rpg_ptf.fx.score.update(); break; case 19: tile.index = 1; stephino_rpg_ptf.fx.end.game(false); break; case 21: tile.index = 20; stephino_rpg_ptf.fx.end.game(true); break; } stephino_rpg_ptf.world.dirty = true; } return false; }, buttons: { _init: false, init: function() { if (!this._init) { var toggleMobile = jQuery('[data-role="mobile-toggle"]').click(function() { gameBody.toggleClass('is-mobile'); stephino_rpg_ptf.fx.sound('cellTap'); }).addClass('active'); if (window.innerHeight === screen.height) { screenfull.request(); gameBody.addClass('full-screen'); } var toggleFullscreen = jQuery('[data-role="full-screen"]').click(function() { screenfull.isFullscreen && gameBody.hasClass('full-screen') && gameBody.removeClass('full-screen'); !screenfull.isFullscreen && !gameBody.hasClass('full-screen') && gameBody.addClass('full-screen'); screenfull.toggle(); stephino_rpg_ptf.fx.sound('cellTap'); }).addClass('active'); jQuery('[data-role="ptf-refresh"]').click(function() { parent.postMessage({msgType: 'start', msgData: gameId}, '*'); jQuery('[data-role="ptf-popup"]').removeClass('success').removeClass('failure'); }); jQuery('[data-role="ptf-next"]').click(function(){ var nextId = parseInt(jQuery(this).attr('data-id'), 0); if (isNaN(nextId)) { nextId = gameId; } parent.postMessage({msgType: 'start', msgData: nextId}, '*'); jQuery('[data-role="ptf-popup"]').removeClass('success').removeClass('failure'); }); jQuery('[data-role="ptf-rating"] > i').click(function() { var objectParent = jQuery(this).parent(); var ptfRating = parseInt(jQuery(this).attr('data-rating'), 10); if (!isNaN(ptfRating) && ptfRating >= 1 && ptfRating <= 5) { parent.postMessage({msgType: 'rate', msgData: ptfRating}, '*'); objectParent.children().removeClass('active'); for (var i = 1; i <= ptfRating; i++) { objectParent.children(`[data-rating="${i}"]`).addClass('active'); } } }); jQuery('[data-role="info"]').html(`#${gameId}, v.${gameBody.attr('data-version')}`); window.setTimeout(function() { toggleMobile.removeClass('active'); toggleFullscreen.removeClass('active'); }, 1000); if (stephino_rpg_ptf.tools.isMobile()) { !gameBody.hasClass('is-mobile') && gameBody.addClass('is-mobile'); } var buttonToggle = function(cursorType, buttonObject, toggleOn) { do { if (toggleOn) { if (!stephino_rpg_ptf.cursors[cursorType].isDown) { stephino_rpg_ptf.cursors[cursorType].isDown = true; !buttonObject.hasClass('active') && buttonObject.addClass('active'); } break; } if (stephino_rpg_ptf.cursors[cursorType].isDown) { stephino_rpg_ptf.cursors[cursorType].isDown = false; buttonObject.hasClass('active') && buttonObject.removeClass('active'); } } while(false); }; jQuery.each(jQuery('[data-btn]'), function() { var cursorType = null; var buttonObject = jQuery(this); switch (buttonObject.attr('data-btn')) { case 'w': cursorType = 'up'; break; case 'a': cursorType = 'left'; break; case 's': cursorType = 'down'; break; case 'd': cursorType = 'right'; break; } if (null !== cursorType) { buttonObject.on('mousedown', function() { buttonToggle(cursorType, buttonObject, true); }); buttonObject.on('touchstart', function() { buttonToggle(cursorType, buttonObject, true); }); buttonObject.on('mouseleave', function() { buttonToggle(cursorType, buttonObject, false); }); buttonObject.on('mouseup', function() { buttonToggle(cursorType, buttonObject, false); }); buttonObject.on('touchend', function() { buttonToggle(cursorType, buttonObject, false); }); } }); this._init = true; } } } }, game: new Phaser.Game(stephino_rpg_data.ptf_size[0], stephino_rpg_data.ptf_size[1], Phaser.CANVAS, 'stephino-rpg-ptf', { preload: function () { this.load.tilemap(labels.tilemap, mapUrl.toString(), null, Phaser.Tilemap.TILED_JSON); this.load.image(labels.tiles, tilesUrl.toString()); this.load.spritesheet(labels.player, playerUrl.toString(), 128, 128); }, create: function () { this.physics.startSystem(Phaser.Physics.ARCADE); this.physics.arcade.gravity.y = 490; this.scale.scaleMode = Phaser.ScaleManager.NO_SCALE; this.scale.fullScreenScaleMode = Phaser.ScaleManager.EXACT_FIT; this.scale.fullScreenTarget = gameBody[0]; stephino_rpg_ptf.map = this.add.tilemap(labels.tilemap); stephino_rpg_ptf.map.addTilesetImage('stephino-rpg-tiles', labels.tiles); stephino_rpg_ptf.map.setCollisionBetween(2, 17); stephino_rpg_ptf.map.setTileIndexCallback(18, stephino_rpg_ptf.fx.collide, this); stephino_rpg_ptf.map.setTileIndexCallback(19, stephino_rpg_ptf.fx.collide, this); stephino_rpg_ptf.map.setTileIndexCallback(21, stephino_rpg_ptf.fx.collide, this); stephino_rpg_ptf.world = stephino_rpg_ptf.map.createLayer('stephino-rpg-layer'); stephino_rpg_ptf.world.renderSettings.enableScrollDelta = false; stephino_rpg_ptf.world.resizeWorld(); stephino_rpg_ptf.player.object = this.add.sprite(0, 0, labels.player); this.physics.enable(stephino_rpg_ptf.player.object); this.camera.follow(stephino_rpg_ptf.player.object); stephino_rpg_ptf.player.object.body.setSize(15, 55, 57, 62); stephino_rpg_ptf.player.object.body.bounce.y = 0; stephino_rpg_ptf.player.object.body.drag.y = 20; stephino_rpg_ptf.player.object.body.drag.x = 100; stephino_rpg_ptf.player.object.body.linearDamping = 0.1; stephino_rpg_ptf.player.object.body.collideWorldBounds = true; stephino_rpg_ptf.player.object.animations.add('left', [0, 1, 2, 3], 10, true); stephino_rpg_ptf.player.object.animations.add('turn', [4], 20, true); stephino_rpg_ptf.player.object.animations.add('right', [5, 6, 7, 8], 10, true); stephino_rpg_ptf.player.object.animations.play('turn'); stephino_rpg_ptf.cursors = this.input.keyboard.createCursorKeys(); stephino_rpg_ptf.fx.score.init(); stephino_rpg_ptf.fx.buttons.init(); }, update: function () { this.physics.arcade.collide(stephino_rpg_ptf.player.object, stephino_rpg_ptf.world); if (null === stephino_rpg_ptf.fx.end.status && stephino_rpg_ptf.player.object.y + stephino_rpg_ptf.player.object.height >= stephino_rpg_ptf.map.heightInPixels) { stephino_rpg_ptf.fx.end.game(false); } if (stephino_rpg_ptf.cursors.up.isDown) { if (stephino_rpg_ptf.player.object.body.onFloor()) { stephino_rpg_ptf.player.object.body.velocity.y = -500; } } if (stephino_rpg_ptf.cursors.down.isDown) { stephino_rpg_ptf.player.object.body.velocity.x = 0; if (!stephino_rpg_ptf.player.object.body.onFloor()) { stephino_rpg_ptf.player.object.body.velocity.y = 450; } if ('front' !== stephino_rpg_ptf.player.side) { stephino_rpg_ptf.player.object.animations.stop(); stephino_rpg_ptf.player.object.frame = 4; stephino_rpg_ptf.player.side = 'front'; } } if (stephino_rpg_ptf.cursors.left.isDown) { stephino_rpg_ptf.player.object.body.velocity.x = -400; if ('left' !== stephino_rpg_ptf.player.side) { stephino_rpg_ptf.player.side = 'left'; stephino_rpg_ptf.player.object.play(stephino_rpg_ptf.player.side); } } else if (stephino_rpg_ptf.cursors.right.isDown) { stephino_rpg_ptf.player.object.body.velocity.x = 400; if ('right' !== stephino_rpg_ptf.player.side) { stephino_rpg_ptf.player.side = 'right'; stephino_rpg_ptf.player.object.play(stephino_rpg_ptf.player.side); } } else { if ('idle' !== stephino_rpg_ptf.player.side) { stephino_rpg_ptf.player.object.animations.stop(); switch (stephino_rpg_ptf.player.side) { case 'left': stephino_rpg_ptf.player.object.frame = 2; break; case 'right': stephino_rpg_ptf.player.object.frame = 7; break; case 'front': stephino_rpg_ptf.player.object.frame = 4; break; } stephino_rpg_ptf.player.side = 'idle'; } } }, render: function () {} }, true) }; window.addEventListener("message", stephino_rpg_ptf.listener,{passive: true}); } while(false);});

/*!
 * Screenfull v5.0.2
 * 
 * https://github.com/sindresorhus/screenfull.js/
 * Copyright (c) Sindre Sorhus
 * Licensed under MIT
 */
!function(){"use strict";var u="undefined"!==typeof window&&void 0!==window.document?window.document:{},e="undefined"!==typeof module&&module.exports,c=function(){for(var e,n=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],r=0,l=n.length,t={};r<l;r++)if((e=n[r])&&e[1]in u){for(r=0;r<e.length;r++)t[n[0][r]]=e[r];return t}return!1}(),l={change:c.fullscreenchange,error:c.fullscreenerror},n={request:function(t){return new Promise(function(e,n){var r=function(){this.off("change",r),e()}.bind(this);this.on("change",r);var l=(t=t||u.documentElement)[c.requestFullscreen]();l instanceof Promise&&l.then(r).catch(n)}.bind(this))},exit:function(){return new Promise(function(e,n){if(this.isFullscreen){var r=function(){this.off("change",r),e()}.bind(this);this.on("change",r);var l=u[c.exitFullscreen]();l instanceof Promise&&l.then(r).catch(n)}else e()}.bind(this))},toggle:function(e){return this.isFullscreen?this.exit():this.request(e)},onchange:function(e){this.on("change",e)},onerror:function(e){this.on("error",e)},on:function(e,n){var r=l[e];r&&u.addEventListener(r,n,!1)},off:function(e,n){var r=l[e];r&&u.removeEventListener(r,n,!1)},raw:c};c?(Object.defineProperties(n,{isFullscreen:{get:function(){return Boolean(u[c.fullscreenElement])}},element:{enumerable:!0,get:function(){return u[c.fullscreenElement]}},isEnabled:{enumerable:!0,get:function(){return Boolean(u[c.fullscreenEnabled])}}}),e?module.exports=n:window.screenfull=n):e?module.exports={isEnabled:!1}:window.screenfull={isEnabled:!1}}();