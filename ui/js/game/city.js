/* global stephino_rpg_tools, stephino_rpg_data */
// Game:City
jQuery(document).ready(function () { var cityObject = jQuery('[data-role="map-holder"]'), cityId = parseInt(cityObject.attr('city-id'), 10); if (isNaN(cityId)) {cityId = 0;} var info = null, mapObject = jQuery('[data-role="map"]'), tools = { building: { vacantAndUcPath: 'M0,256a256,150 0 1,0 512,0a256,150 0 1,0 -512,0', queue: { _timers: {}, timerClear: function(buildingId) { if ("number" === typeof tools.building.queue._timers[buildingId]) { try { window.clearTimeout(tools.building.queue._timers[buildingId]); } catch(e){} tools.building.queue._timers[buildingId] = null; } }, timerSet: function(buildingId, callable, delay) { tools.building.queue.timerClear(buildingId); tools.building.queue._timers[buildingId] = window.setTimeout(callable, delay); }, enable: function(buildingObject, cellItemObject, queueData) { var buildingConfigId = buildingObject.attr('cell-config-id'); tools.building.queue.timerClear(buildingConfigId); if("object" === typeof queueData && null !== queueData && "undefined" !== typeof queueData.timeLeft) { buildingObject.attr('data-uc', 'true'); var timeLeft = parseInt(queueData.timeLeft, 10) + 1; var timeTotal = parseInt(queueData.timeTotal, 10) + 1; var labelObject = cellItemObject.find('.cell-item-uc .label > span'); var svgPath = mapObject.find('[data-role="action-area"][data-config-id="' + buildingConfigId + '"] path'); if (svgPath.length) { svgPath.attr('d-original', svgPath.attr('d')); svgPath.attr('d', tools.building.vacantAndUcPath); } var counter = function() { labelObject.html(stephino_rpg_tools.utils.secondsGM(timeLeft)); timeLeft--; if (timeLeft >= 0) { tools.building.queue.timerSet(buildingConfigId, function() {counter();}, 1000); } else { labelObject.html('&#8230;'); } }; if (timeTotal > 0 && timeLeft >= 0 && labelObject.length) { counter(); } } }, disable: function(buildingObject) { var buildingConfigId = buildingObject.attr('cell-config-id'); var objectType = 'buildings'; stephino_rpg_tools.ajax('actionBuildingUpgradeInfo', { "cityId": cityId, 'buildingConfigId': buildingConfigId }, function(msg) { if (msg.status) { var payload = msg.result; if (null !== payload.data.buildingBkg) { buildingObject.removeAttr('cell-vacant'); buildingObject.find('.cell-item').css({ 'background-image': 'url("' + stephino_rpg_tools.media.getUrl( 'img/story/' + objectType + '/' + buildingConfigId + '/512' + (1 === payload.data.buildingBkg ? '' : '-' + payload.data.buildingBkg) + '.png' ) + '")' }); } var svgPath = jQuery('[data-role="action-area"][data-config-id="' + buildingConfigId + '"] path'); if (svgPath.length) { svgPath.attr('d-original', payload.data.actionArea); } buildingObject.find('[anim^="buildings"]').remove(); if (null !== payload.anim) { var itemsHolder = buildingObject.find('.items-holder'); if (itemsHolder.length) { jQuery.each(payload.anim, function(animationLevel, animations) { if (!jQuery.isArray(animations) || !animations.length) { return true; } animations.forEach(function(animationId) { itemsHolder.append( jQuery('<div><div></div></div>').attr( 'anim', objectType + '-' + buildingConfigId + '-' + animationLevel + '-c-' + animationId ) ); }); }); } } tools.building.queue.timerClear(buildingConfigId); buildingObject.find('.cell-item-uc .label > span').empty(); buildingObject.attr('data-uc', 'false'); var svgPath = mapObject.find('[data-role="action-area"][data-config-id="' + buildingConfigId + '"] path'); if (svgPath.length) { svgPath.attr('d', svgPath.attr('d-original')); } buildingObject.find('.cell-item > i').html(payload.data.building_level > 0 ? payload.data.building_level : ''); buildingObject.attr('cell-level', payload.data.building_level); } }); } } } }; stephino_rpg_tools.dialog.actions = { heartBeatCallback: function(msg) { if ("object" === typeof msg && "object" === typeof msg.result && "object" === typeof msg.result.heartBeatQueues) { jQuery.each(jQuery('[cell-config-id]'), function() { var buildingObject = jQuery(this); var buildingConfigId = parseInt(buildingObject.attr('cell-config-id'), 10); var buildingQueued = false; if (null !== msg.result.heartBeatQueues) { jQuery.each(msg.result.heartBeatQueues, function(buildingQueuedConfigId) { if (parseInt(buildingQueuedConfigId, 10) === buildingConfigId) { buildingQueued = true; return false; } }); } if (buildingQueued) { tools.building.queue.enable( buildingObject, buildingObject.find('.cell-item'), msg.result.heartBeatQueues[buildingConfigId] ); } else { if ('true' === buildingObject.attr('data-uc')) { tools.building.queue.disable(buildingObject); } } }); } }, cityRename: function() { var inputElement = jQuery(this); stephino_rpg_tools.ajax('actionCityRename', { cityId: cityId, cityName: inputElement.val() }, function(msg) { if (msg.status && null !== msg.result && 'string' === typeof msg.result.city_name) { var fullCityName = stephino_rpg_tools.utils.getCityName(msg.result); jQuery('.top-bar [data-role="title"], .dome-cities .icon.current .label > span').html(fullCityName); inputElement.val(msg.result.city_name).keyup(); } }); }, cityGovernmentSetButton: function(args) { if (jQuery.isArray(args) && 2 === args.length) { stephino_rpg_tools.ajax('actionCityGovernmentSet', { cityId: parseInt(args[0], 10), cityGovernmentId: parseInt(args[1], 10) }, function(msg) { stephino_rpg_tools.dialog.refresh(); }); } }, cityMoveCapitalPreviewButton: function() { stephino_rpg_tools.dialog.show('dialogCityMoveCapital', { cityId: cityId }); }, cityMoveCapitalButton: function() { stephino_rpg_tools.ajax('actionCityMoveCapital', { cityId: cityId }, function(msg) { if (msg.status) { jQuery.each(jQuery('.dome-cities .icon .label > span'), function() { jQuery(this).html(jQuery(this).text().replace(/^\W/g, '')); }); jQuery('.top-bar [data-role="title"], .dome-cities .icon.current .label > span').prepend(stephino_rpg_data.symbol_capital); stephino_rpg_tools.toast.show(msg.content); } stephino_rpg_tools.dialog.hide(); }); }, cityWorkforceDialog: function() { stephino_rpg_tools.dialog.show('dialogCityWorkforce', { cityId: cityId }); }, cityWorkforce: function() { var workers = {}; jQuery.each(jQuery(this).parents('[data-role="city-workers"]').find('input[type="range"]'), function(k,v){ var buildingId = parseInt(jQuery(v).attr('name').replace(/^buildings_/, ''), 10); workers[buildingId] = parseInt(jQuery(v).val(), 10); }); stephino_rpg_tools.ajax('actionCityWorkforce', { cityId: cityId, cityWorkers: workers }, function(msg) { if (msg.status) { stephino_rpg_tools.toast.show(stephino_rpg_data.i18n.city_workers_updated); } }); }, buildingWorkers: function(args, data) { var objectProductionTable = jQuery(this).parents('.modal').find('[data-role="totalProduction"]'); if (objectProductionTable.length) { stephino_rpg_tools.ajax('actionBuildingProductionPreview', { cityId: cityId, buildingConfigId: data.buildingConfig.id, buildingWorkers: jQuery(this).val() }, function(msg) { if (msg.status) { objectProductionTable.html(msg.content); stephino_rpg_tools.dialog._coreActionsHandler(objectProductionTable); stephino_rpg_tools.dialog._objects.modalContent.find('[title]').tooltip({ container: stephino_rpg_tools.dialog._objects.modal[0] }); stephino_rpg_tools.toast.show(stephino_rpg_data.i18n.city_workers_updated); } }); } }, buildingUpgradeDialog: function(args, data) { var buildingConfigId = (jQuery.isArray(args) && 1 === args.length ? args[0] : data.buildingConfig.id); stephino_rpg_tools.dialog.show('dialogBuildingUpgrade', { cityId: cityId, buildingConfigId: buildingConfigId }); }, buildingViewDialog: function(args, data) { var buildingConfigId = (jQuery.isArray(args) && args.length >= 1 ? args[0] : data.buildingConfig.id); var buildingObject = jQuery('[cell-type="buildings"][cell-config-id="' + buildingConfigId + '"]'); var buildingEntityType = jQuery.isArray(args) && "undefined" !== typeof args[1] ? args[1] : 0; var buildingEntityConfigId = jQuery.isArray(args) && "undefined" !== typeof args[2] ? parseInt(args[2]) : 0; stephino_rpg_tools.dialog.show('dialogBuildingInfo', { cityId: cityId, buildingConfigId: buildingConfigId, buildingEntityType: buildingEntityType, buildingEntityConfigId: buildingEntityConfigId }, function(data) { if ('undefined' !== typeof data.buildingQueue) { if (null !== data.buildingQueue) { tools.building.queue.enable( buildingObject, buildingObject.find('.cell-item'), data.buildingQueue ); } else { tools.building.queue.disable(buildingObject); } } }, 'true' === buildingObject.attr('cell-vacant') ? null : ('buildings/' + buildingConfigId) ); }, buildingUpgrade: function(args, data) { stephino_rpg_tools.ajax('actionBuildingUpgrade', { cityId: cityId, buildingConfigId: data.buildingConfig.id }, function(msg) { if (msg.status) { var buildingObject = jQuery('[cell-type="buildings"][cell-config-id="' + data.buildingConfig.id + '"]'); tools.building.queue.enable( buildingObject, buildingObject.find('.cell-item'), msg.result.buildingQueue ); stephino_rpg_tools.dialog._objects.modalBack.click(); } }); }, buildingUpgradeCancelDialog: function(args, data) { var buildingConfigId = jQuery.isArray(args) && args.length >= 1 ? parseInt(args[0], 10) : data.buildingConfig.id; stephino_rpg_tools.dialog.show('dialogBuildingUpgradeCancel', { cityId: cityId, buildingConfigId: buildingConfigId }); }, buildingUpgradeCancel: function(args, data) { stephino_rpg_tools.ajax('actionBuildingUpgradeCancel', { cityId: cityId, buildingConfigId: data.buildingConfig.id }, function(msg) { if (msg.status) { tools.building.queue.disable(jQuery('[cell-type="buildings"][cell-config-id="' + data.buildingConfig.id + '"]')); stephino_rpg_tools.dialog._objects.modalBack.click(); } }); }, buildingTradeDialog: function(args, data) { var buildingConfigId = jQuery.isArray(args) && args.length >= 1 ? parseInt(args[0], 10) : data.buildingConfig.id; stephino_rpg_tools.dialog.show('dialogBuildingTrade', { cityId: cityId, buildingConfigId: buildingConfigId }); }, buildingTradeButton: function(args, data) { if (jQuery.isArray(args) && 1 === args.length) { var tradeType = args[0]; if ('buy' !== tradeType && 'sell' !== tradeType) { return; } var tradeResources = {}; jQuery.each(jQuery(this).parents('.modal').find('[data-role="trade-' + tradeType + '"] input[type="range"]'), function(k,v){ tradeResources[jQuery(v).attr('name')] = parseInt(jQuery(v).val(), 10); }); stephino_rpg_tools.ajax('actionBuildingTrade', { cityId: cityId, buildingConfigId: data.buildingConfig.id, buildingTradeType: tradeType, buildingTradeResources: tradeResources }, function(msg) { stephino_rpg_tools.dialog.refresh(); }); } }, researchAreaInfo: function(args) { if (jQuery.isArray(args) && args.length >= 1) { stephino_rpg_tools.dialog.show('dialogResearchInfo', { cityId: cityId, researchAreaConfigId: parseInt(args[0], 10), researchFieldConfigId: ("undefined" !== typeof args[1] ? parseInt(args[1], 10) : 0) }); } }, researchFieldQueue: function(args) { if (jQuery.isArray(args) && args.length >= 1) { var queueAction = ("undefined" !== typeof args[1] ? parseInt(args[1], 10) : 1); stephino_rpg_tools.ajax('actionResearchQueue', { cityId: cityId, researchFieldConfigId: parseInt(args[0], 10), researchFieldQueue: (1 === queueAction) }, function(msg) { stephino_rpg_tools.map.sound.manager.trigger('queueResearch'); stephino_rpg_tools.dialog.refresh(); }); } }, entityDialog: function(args) { if (jQuery.isArray(args) && 3 === args.length) { stephino_rpg_tools.dialog.show('dialogEntityQueue', { cityId: cityId, entityKey: args[0], entityConfigId: parseInt(args[1], 10), entityQueueAction: args[2] }); } }, entityQueuePreview: function(args) { if (jQuery.isArray(args) && args.length >= 2) { var objectCostTable = jQuery(this).parents('.modal').find('[data-role="totalEffect"]'); if (objectCostTable.length) { var queueAction = ("undefined" !== typeof args[2] ? parseInt(args[2], 10) : 1); stephino_rpg_tools.ajax('actionEntityQueuePreview', { cityId: cityId, entityKey: args[0], entityConfigId: args[1], entityCount: jQuery(this).val(), entityQueue: (1 === queueAction) }, function(msg) { if (msg.status) { objectCostTable.html(msg.content); stephino_rpg_tools.dialog._coreActionsHandler(objectCostTable); stephino_rpg_tools.dialog._objects.modalContent.find('[title]').tooltip({ container: stephino_rpg_tools.dialog._objects.modal[0] }); } }); } } }, entityQueue: function(args) { if (jQuery.isArray(args) && args.length >= 2) { var objectRange = jQuery(this).parents('.modal').find('input[type="range"]'); if (objectRange.length) { var queueAction = ("undefined" !== typeof args[2] ? parseInt(args[2], 10) : 1); stephino_rpg_tools.ajax('actionEntityQueue', { cityId: cityId, entityKey: args[0], entityConfigId: args[1], entityCount: objectRange.val(), entityQueue: (1 === queueAction) }, function(msg) { stephino_rpg_tools.map.sound.manager.trigger(1 === queueAction ? 'queueEntity' : 'hudClose'); stephino_rpg_tools.dialog._objects.modalBack.click(); }); } } }, entityDisbandPreview: function(args) { if (jQuery.isArray(args) && args.length >= 3) { var parentObject = jQuery(this).parents('[data-role="disband"]'); var objectCostTable = jQuery(this).parents('.modal').find('[data-role="totalEffect"]'); if (parentObject.length) { var disbandTotal = parseInt(jQuery(this).val(), 10); var buttonObject = parentObject.find('[data-click="entityDisband"]'); var rewardPerEntity = parseInt(args[2], 10); if (isFinite(rewardPerEntity) && rewardPerEntity > 0) { parentObject.find('[data-role="populationReward"]').html( stephino_rpg_tools.php.number_format(rewardPerEntity * disbandTotal) ); } if (disbandTotal > 0) { buttonObject.hasClass('d-none') && buttonObject.removeClass('d-none'); objectCostTable.hasClass('d-none') && objectCostTable.removeClass('d-none'); stephino_rpg_tools.ajax('actionEntityDisbandPreview', { cityId: cityId, entityKey: args[0], entityConfigId: args[1], entityCount: disbandTotal }, function(msg) { if (msg.status) { objectCostTable.html(msg.content); stephino_rpg_tools.dialog._coreActionsHandler(objectCostTable); stephino_rpg_tools.dialog._objects.modalContent.find('[title]').tooltip({ container: stephino_rpg_tools.dialog._objects.modal[0] }); } }); } else { !buttonObject.hasClass('d-none') && buttonObject.addClass('d-none'); !objectCostTable.hasClass('d-none') && objectCostTable.addClass('d-none'); } } } }, entityDisband: function(args) { if (jQuery.isArray(args) && 2 === args.length) { var objectRange = jQuery(this).parents('.modal').find('input[type="range"]'); if (objectRange.length) { stephino_rpg_tools.ajax('actionEntityDisband', { cityId: cityId, entityKey: args[0], entityConfigId: args[1], entityCount: objectRange.val() }, function(msg) { stephino_rpg_tools.dialog._objects.modalBack.click(); }); } } } }; stephino_rpg_tools.ajax( 'cellsCity', {cityId: cityId}, function(msg) { if (!msg.status) { return; } info = msg.result; jQuery('[data-role="title"]').click(function() { stephino_rpg_tools.map.sound.manager.trigger('cellTap'); stephino_rpg_tools.dialog.show('dialogCityAdvisor', { "cityId": cityId }, function(msg) {}); }); stephino_rpg_tools.map.init( cityObject, mapObject, { background: stephino_rpg_tools.media.getUrl( 'img/story/cities/' + info.cityConfig.id + '/full' + (1 === info.cityBkg ? '' : '-' + info.cityBkg) + '.jpg' ), marginTop: 50, marginBottom: 50, cellPaddingTop: 1, cellPaddingBottom: 1, cells: info.grid, cellController: function(cellObject, payload) { var itemsHolder = jQuery('<div class="items-holder"></div>'); var itemsHolderEmpty = true; if ("object" === typeof payload.anim && null !== payload.anim) { jQuery.each(payload.anim, function(objectType, objectDetails) { jQuery.each(objectDetails, function(objectId, animationIds) { if ("buildings" === objectType) { if (null === payload.data || true === payload.data) { return true; } jQuery.each(animationIds, function(animationLevel, animations) { if (!jQuery.isArray(animations) || !animations.length) { return true; } if ('uc' === animationLevel) { animations.forEach(function(animationId) { itemsHolder.append(jQuery('<div><div></div></div>').attr('anim', 'cities' + '-' + info.cityConfig.id + '-uc-c-' + animationId).attr('anim-uc', 'true')); itemsHolderEmpty = false; }); } else { animations.forEach(function(animationId) { itemsHolder.append(jQuery('<div><div></div></div>').attr('anim', objectType + '-' + objectId + '-' + animationLevel + '-c-' + animationId)); itemsHolderEmpty = false; }); } }); } else { animationIds.forEach(function(animationId) { itemsHolder.append(jQuery('<div><div></div></div>').attr('anim', objectType + '-' + objectId + '-c-' + animationId)); itemsHolderEmpty = false; }); } }); }); } var cellZIndex = (null === payload.data || true === payload.data ? 100 : 200) - parseInt(cellObject.attr('cell-y'), 10); cellObject.css({zIndex: cellZIndex}); if ("string" === typeof payload.type) { itemsHolderEmpty = false; cellObject.attr('cell-type', payload.type); cellObject.attr('cell-config-id', payload.configId); var cellItem = jQuery('<div class="cell-item"><i></i><b></b><div class="cell-item-uc"><div class="label"><span></span></div></div></div>'); itemsHolder.append(cellItem); var actionArea = jQuery( '<svg data-role="action-area" data-config-id="' + payload.configId + '" width="512px" height="512px" viewBox="0 0 256 256">' + '<g fill="transparent">' +'<path class="path" d="' + tools.building.vacantAndUcPath + '"></path>' +'</g>' +'</svg>' ); var actionAreaPath = actionArea.find('path'); actionAreaPath.hover(function(){ if (!cellObject.hasClass('hover')) { cellObject.addClass('hover'); } }, function() { if (cellObject.hasClass('hover')) { cellObject.removeClass('hover'); } }); cellItem.find('.cell-item-uc').css({ 'background-image': 'url("' + stephino_rpg_tools.media.getUrl( 'img/story/cities/' + info.cityConfig.id + '/512-under-construction.png' ) + '")' }); actionArea.attr('cell-x', payload.x).attr('cell-y', payload.y).css({ zIndex: (null === payload.data || true === payload.data ? 400 : 800) - cellZIndex, transform: cellObject.css('transform') }); mapObject.append(actionArea); do { if ("object" === typeof payload.queue) { tools.building.queue.enable(cellObject, cellItem, payload.queue); break; } if (null === payload.data || true === payload.data || null === payload.data.buildingBkg) { cellItem.css({ 'background-image': 'url("' + stephino_rpg_tools.media.getUrl( 'img/story/cities/' + info.cityConfig.id + '/' + (true === payload.data ? '512-vacant-ready' : '512-vacant') + '.png' ) + '")' }); cellObject.attr('cell-vacant', 'true'); break; } if ('string' === typeof payload.data.actionArea) { actionAreaPath.attr('d', payload.data.actionArea); } cellItem.css({ 'background-image': 'url("' + stephino_rpg_tools.media.getUrl( 'img/story/' + payload.type + '/' + payload.configId + '/512' + (1 === payload.data.buildingBkg ? '' : '-' + payload.data.buildingBkg) + '.png' ) + '")' }); cellItem.children('i').html(payload.data.building_level > 0 ? payload.data.building_level : ''); cellObject.attr('cell-level', payload.data.building_level); } while(false); } if (!itemsHolderEmpty) { cellObject.prepend(itemsHolder); } return !itemsHolderEmpty; }, cellTap: function(targetObject) { if (targetObject.hasClass('path')) { stephino_rpg_tools.map.sound.manager.trigger('cellTap'); var parent = targetObject.parents('[cell-x][cell-y]'); var cellX = parent.attr('cell-x'); var cellY = parent.attr('cell-y'); var correspondingCell = mapObject.find('.cell[cell-x="' + cellX + '"][cell-y="' + cellY + '"]'); if ('buildings' === correspondingCell.attr('cell-type')) { stephino_rpg_tools.dialog.actions.buildingViewDialog([ correspondingCell.attr('cell-config-id') ]); } } } } ); } );});